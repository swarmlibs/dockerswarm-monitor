#!/bin/bash
# Copyright (c) Swarm Library Maintainers.
# SPDX-License-Identifier: MIT

set -e

# Prometheus configuration file.
export PROMETHEUS_CONFIG_DIR="/prometheus/config"
export PROMETHEUS_CONFIG_FILE="/etc/prometheus/prometheus.yml"

# Directory containing the scrape configuration files.
export PROMETHEUS_SCRAPE_CONFIG_DIR="/etc/prometheus/scrape_configs"

# Prometheus data directory.
export PROMETHEUS_TSDB_PATH="/prometheus/data"

# Create the directory for the configuration parts.
mkdir -p $(dirname ${PROMETHEUS_CONFIG_FILE})
mkdir -p ${PROMETHEUS_CONFIG_DIR}

export GLOBAL_CONFIG_FILE=${GLOBAL_CONFIG_FILE:-"${PROMETHEUS_CONFIG_DIR}/00-global.yml"}
if [ ! -f "$GLOBAL_CONFIG_FILE" ]; then
  /utils/gen-global-config "${GLOBAL_CONFIG_FILE}"
fi

# Generate the alertmanager configuration file.
export ALERTING_CONFIG_FILE=${ALERTING_CONFIG_FILE:-"${PROMETHEUS_CONFIG_DIR}/10-alerting.yml"}
if [ ! -f "${ALERTING_CONFIG_FILE}" ]; then
    /utils/gen-alerting-config "${ALERTING_CONFIG_FILE}"
fi

# Generate the configuration file by concatenating all the parts.
echo "# Generated by /docker-entrypoint.sh" > "${PROMETHEUS_CONFIG_FILE}"
for partfile in ${PROMETHEUS_CONFIG_DIR}/*; do
    echo "" >> "${PROMETHEUS_CONFIG_FILE}"
    echo "# Source: ${partfile}" >> "${PROMETHEUS_CONFIG_FILE}"
    cat "$partfile" >> "${PROMETHEUS_CONFIG_FILE}"
done

# If the user is trying to run Prometheus directly with some arguments, then
# pass them to Prometheus.
if [ "${1:0:1}" = '-' ]; then
    set -- prometheus "$@"
fi

# If the user is trying to run Prometheus directly with out any arguments, then
# pass the configuration file as the first argument.
if [ "$1" = "" ]; then
    set -- prometheus \
        --config.file="${PROMETHEUS_CONFIG_FILE}" \
        --storage.tsdb.path="${PROMETHEUS_TSDB_PATH}" \
        --web.console.libraries=/usr/share/prometheus/console_libraries \
        --web.console.templates=/usr/share/prometheus/consoles \
        --log.level=info
fi

set -x
exec "$@"
